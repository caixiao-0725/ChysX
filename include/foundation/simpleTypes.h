//author  :  ChengXiao (vegtsunami@gmail.com)

#ifndef SIMPLE_TYPES_H
#define SIMPLE_TYPES_H

#if CX_VC
#pragma warning(push)
#pragma warning(disable : 4668) // suppressing warning generated by Microsoft Visual Studio when including this standard
// header
#endif

#include <stdint.h>
#if CX_VC
#pragma warning(pop)
#endif

#if CX_VC // we could use inttypes.h starting with VC12
#define CX_PRIu64 "I64u"
#else
#include <inttypes.h>
#define CX_PRIu64 PRIu64
#endif


namespace CX_NAMESPACE       
{
typedef int64_t CxI64;
typedef uint64_t CxU64;
typedef int32_t CxI32;
typedef uint32_t CxU32;
typedef int16_t CxI16;
typedef uint16_t CxU16;
typedef int8_t CxI8;
typedef uint8_t CxU8;
typedef float CxF32;
typedef double CxF64;
typedef float CxReal;
// Int-as-bool type - has some uses for efficiency and with SIMD
typedef CxI32 CxIntBool;
static const CxIntBool CxIntFalse = 0;
static const CxIntBool CxIntTrue = 1;

// types for direct-GPU API
typedef CxU32 CxArticulationGPUIndex;
typedef CxU32 CxRigidDynamicGPUIndex;
typedef CxU32 CxShapeGPUIndex;

typedef CxU32 CxConstraintGPUIndex;
#define CxINVALID_CONSTRAINT_GPU_INDEX 0xffffFFFF

typedef CxConstraintGPUIndex CxD6JointGPUIndex;
#define CxINVALID_D6_JOINT_GPU_INDEX CxINVALID_CONSTRAINT_GPU_INDEX


} // namespace cx


#define CX_SIGN_BITMASK 0x80000000

// Type ranges

#define CX_MAX_F32 3.4028234663852885981170418348452e+38F
// maximum possible float value
#define CX_MAX_F64 DBL_MAX // maximum possible double value

#define CX_EPS_F32 FLT_EPSILON // maximum relative error of float rounding
#define Cx_EPS_F64 DBL_EPSILON // maximum relative error of double rounding

#define Cx_MAX_REAL Cx_MAX_F32
#define Cx_EPS_REAL Cx_EPS_F32
#define CX_NORMALIZATION_EPSILON float(1e-20f)

// Legacy type ranges used by Quark
#define CX_MAX_I8 INT8_MAX
#define CX_MIN_I8 INT8_MIN
#define CX_MAX_U8 UINT8_MAX
#define CX_MIN_U8 UINT8_MIN
#define CX_MAX_I16 INT16_MAX
#define CX_MIN_I16 INT16_MIN
#define CX_MAX_U16 UINT16_MAX
#define CX_MIN_U16 UINT16_MIN
#define CX_MAX_I32 INT32_MAX
#define CX_MIN_I32 INT32_MIN
#define CX_MAX_U32 UINT32_MAX
#define CX_MIN_U32 UINT32_MIN

#endif
